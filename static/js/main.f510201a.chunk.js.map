{"version":3,"sources":["reportWebVitals.js","Components/Card.js","Components/CardList.js","Components/Searchbox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","Searchbox","searchchange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","robotto","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,cACnB,gCACI,mCAAMF,EAAN,OACA,kCAAKC,EAAL,cCSDK,EAdE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAETC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OACI,cAAC,EAAD,CAAcT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAA5DU,MAGnB,OACI,8BACKH,KCGEI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCXI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAY,SAAUC,OAAS,kBAAmBC,OAAQ,SAAvE,SACKJ,EAAMK,aCmBJC,E,kDArBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG9B,WACI,OAAGG,KAAKJ,MAAMC,SACH,oBAAIvB,UAAU,KAAd,8CAGA0B,KAAKX,MAAMK,a,GAjBHQ,aCKNC,E,kDAEjB,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAcD,EAAME,OAAOC,SAb3C,EAAKZ,MAAQ,CACTa,QAAU,GACVH,YAAc,IAJR,E,qDAQd,WAAsB,IAAD,OACjBI,MAAM,8CACL9C,MAAK,SAAA+C,GAAQ,OAAIA,EAASC,UAC1BhD,MAAK,SAAAiD,GAAU,EAAKZ,SAAS,CAACQ,QAAUI,S,oBAQ7C,WACI,MAA+Bb,KAAKJ,MAA7Ba,EAAP,EAAOA,QAASH,EAAhB,EAAgBA,YACVQ,EAAiBL,EAAQM,QAAO,SAAAC,GACtC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASZ,EAAYW,kBAErD,OAAIR,EAAQU,OAIJ,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,2BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQoC,WAR3B,oBAAIxC,UAAU,QAAd,yB,GA3Bc4B,aCAjCkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B/D,M","file":"static/js/main.f510201a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robo' src={`https://robohash.org/${id}?100x100`} />\r\n            <div>\r\n                <h2> {name} </h2>\r\n                <p> {email} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    const cardComponent = robots.map((user, i) => {\r\n        return (\r\n            <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst Searchbox = ({searchchange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchchange}\r\n             />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY : 'scroll', border : '3px solid black', height: '700px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError : true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h1 className='tc'>Oooooooops! Something went wrong</h1>\r\n        }\r\n        else {\r\n            return this.props.children\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport Searchbox from '../Components/Searchbox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robotto : [],\r\n            searchfield : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => {this.setState({robotto : users})});\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield : event.target.value })\r\n    \r\n     }\r\n\r\n    render() {\r\n        const {robotto, searchfield} = this.state;\r\n        const filteredRobots = robotto.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if(!robotto.length) {\r\n            return <h1 className='tc f1'>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'> Robofriends </h1>\r\n                    <Searchbox searchchange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots={filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './Containers/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}